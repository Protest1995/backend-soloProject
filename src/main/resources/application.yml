spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  datasource:
    # PostgreSQL 資料庫配置
    url: jdbc:postgresql://localhost:5432/solo_project
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate  # 生產環境：只驗證表結構，不重新創建
    show-sql: true  # 顯示 SQL 語句
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        # 只驗證表結構，不重新創建
        hbm2ddl:
          auto: validate
        # 不刪除並重新創建表
        jdbc:
          time_zone: UTC
        # 禁用二級緩存
        cache:
          use_second_level_cache: false
          use_query_cache: false
  
  # 啟用 SQL 初始化腳本，確保表結構正確
  sql:
    init:
      mode: always
      schema-locations: classpath:schema-postgres.sql
      data-locations: classpath:data.sql
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - openid
              - profile
              - email
            # 使用 Spring Security 預設授權回調端點
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

server:
  port: 8080
  servlet:
    context-path: /api
  mvc:
    locale: zh_TW
    locale-resolver: accept-header

jwt:
  # 開發用預設密鑰（至少 64 bytes）。正式環境請以環境變數 JWT_SECRET 覆寫。
  secret: ${JWT_SECRET:your-jwt-secret-key}
  expiration: 86400000 # 24 hours
  refresh-expiration: 604800000 # 7 days

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true 
oauth2:
  frontend-success-url: ${OAUTH2_FRONTEND_SUCCESS_URL:http://localhost:5173/login}
  frontend-failure-url: ${OAUTH2_FRONTEND_FAILURE_URL:http://localhost:5173/login}